document.addEventListener("DOMContentLoaded", async () => {
  const productList = document.getElementById("product-list");

  try {
    const res = await fetch("/api/products");
    if (!res.ok) throw new Error("‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

    const products = await res.json();
    productList.innerHTML = "";

    for (const product of products) {
      //  ‡∏î‡∏∂‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
      let reviewsHtml = "<p class='no-reviews'>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</p>";
      try {
        const reviewRes = await fetch(`/api/products/${product.id}/reviews`);
        if (reviewRes.ok) {
          const reviews = await reviewRes.json();
          if (reviews.length > 0) {
            reviewsHtml = reviews.map(review => `
              <div class="review-item">
                <div class="review-header-info">
                  <span class="reviewer-name">${review.user?.name || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠"}</span>
                  <span class="review-date">${new Date(review.created_at).toLocaleDateString()}</span>
                </div>
                <div class="review-rating">‚≠êÔ∏è ${review.rating}</div>
                <div class="review-text">${review.content}</div>
              </div>
            `).join("");
          }
        }
      } catch (err) {
        console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏µ‡∏ß‡∏¥‡∏ß:", err);
      }

      //  ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ + ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
      productList.innerHTML += `
        <div class="product-card">
          <img src="${product.url_img}" alt="${product.name}" class="product-image">
          <h3>${product.name}</h3>
          <p>${product.description}</p>
          <p> ‡∏£‡∏≤‡∏Ñ‡∏≤: ${product.price} ‡∏ö‡∏≤‡∏ó</p>
          <button class="btnReview" onclick="openReviewForm(${product.id}, '${product.name}')"> ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</button>
          <div id="review-form-${product.id}" style="display:none;"></div>

          <div class="review-section">
            <h4> ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h4>
            <div class="reviews-list">${reviewsHtml}</div>
          </div>
        </div>
      `;
    }
  } catch (err) {
    console.error(err);
    productList.innerHTML = "<p>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</p>";
  }
});

// ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
function openReviewForm(productId, productName) {
  const container = document.getElementById(`review-form-${productId}`);
  container.innerHTML = `
    <div class="review-box">
      <h4>üìù ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: <strong>${productName}</strong></h4>
      <label for="review-comment-${productId}">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô:</label><br>
      <textarea id="review-comment-${productId}" rows="3" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡πá‡∏ô..." style="width: 100%; margin-bottom: 10px;"></textarea>

      <label for="review-rating-${productId}">‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô:</label><br>
      <select id="review-rating-${productId}" style="width: 100px; margin-bottom: 10px;">
        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</option>
        <option value="1">‚≠êÔ∏è</option>
        <option value="2">‚≠êÔ∏è‚≠êÔ∏è</option>
        <option value="3">‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è</option>
        <option value="4">‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è</option>
        <option value="5">‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è</option>
      </select>

      <div style="margin-top:10px;">
        <button class="btn" onclick="submitReview(${productId})"> ‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</button>
        <button class="btn1" onclick="cancelReviewForm(${productId})"> ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
      </div>
    </div>
  `;
  container.style.display = "block";
}

function cancelReviewForm(productId) {
  const container = document.getElementById(`review-form-${productId}`);
  container.innerHTML = "";
  container.style.display = "none";
}

//  ‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß
async function submitReview(productId) {
  const comment = document.getElementById(`review-comment-${productId}`).value.trim();
  const rating = parseInt(document.getElementById(`review-rating-${productId}`).value);
  const token = localStorage.getItem("auth_token");

  if (!token) {
    alert("‚ö† ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß");
    return;
  }

  if (!comment || isNaN(rating) || rating < 1 || rating > 5) {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1 ‡∏ñ‡∏∂‡∏á 5");
    return;
  }

  try {
    const res = await fetch(`/api/products/${productId}/reviews`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + token,
        Accept: "application/json"
      },
      body: JSON.stringify({
        product_id: productId,
        content: comment,
        rating: rating
      }),
    });

    const data = await res.json();
    if (!res.ok) {
      alert(` ‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${data.message || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏'}`);
      return;
    }

    alert(" ‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");
    cancelReviewForm(productId);

    
    location.reload();
  } catch (err) {
    console.error(err);
    alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß");
  }
}
